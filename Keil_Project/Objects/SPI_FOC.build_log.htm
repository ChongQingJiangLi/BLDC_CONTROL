<html>
<body>
<pre>
<h1>µVision Build Log</h1>
<h2>Tool Versions:</h2>
IDE-Version: µVision V5.24.2.0
Copyright (C) 2017 ARM Ltd and ARM Germany GmbH. All rights reserved.
License Information: Viktor Microsoft, Microsoft, LIC=----
 
Tool Versions:
Toolchain:       MDK-Lite  Version: 5.24.1
Toolchain Path:  C:\Keil_v5\ARM\ARMCC\Bin
C Compiler:      Armcc.exe V5.06 update 5 (build 528)
Assembler:       Armasm.exe V5.06 update 5 (build 528)
Linker/Locator:  ArmLink.exe V5.06 update 5 (build 528)
Library Manager: ArmAr.exe V5.06 update 5 (build 528)
Hex Converter:   FromElf.exe V5.06 update 5 (build 528)
CPU DLL:         SARMCM3.DLL V5.24.1
Dialog DLL:      DCM.DLL V1.16.0.0
Target DLL:      STLink\ST-LINKIII-KEIL_SWO.dll V3.0.1.0
Dialog DLL:      TCM.DLL V1.32.0.0
 
<h2>Project:</h2>
D:\MEGA cloud\GitHub\Stabilization_BLDC\Keil_Project\SPI_FOC.uvprojx
Project File Date:  01/30/2018

<h2>Output:</h2>
*** Using Compiler 'V5.06 update 5 (build 528)', folder: 'C:\Keil_v5\ARM\ARMCC\Bin'
Build target 'Target 1'
compiling main.c...
.\LIB\mylib.h(8): warning:  #1-D: last line of file ends without a newline
  #define window_Roll 10000
main.c: 1 warning, 0 errors
compiling motor.c...
.\LIB\mylib.h(8): warning:  #1-D: last line of file ends without a newline
  #define window_Roll 10000
LIB\motor\motor.c(178): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	theta = theta_elec_degrees*0.01745329251994329576923690768489 ;//Pi/180; // translating into radians
LIB\motor\motor.c(214): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vb_1 = arm_cos_f32(theta - 2.0943951023931954923084289221863);//cos(theta - 2.0943951023931954923084289221863 /* 2*Pi/3 */);
LIB\motor\motor.c(215): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vc_1 = arm_cos_f32(theta + 2.0943951023931954923084289221863);//cos(theta + 2.0943951023931954923084289221863);
LIB\motor\motor.c(241): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	theta = theta_elec_degrees*0.01745329251994329576923690768489 ;//Pi/180; // translating into radians
LIB\motor\motor.c(247): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vb_1 = arm_cos_f32(theta - 2.0943951023931954923084289221863);//cos(theta - 2.0943951023931954923084289221863 /* 2*Pi/3 */);
LIB\motor\motor.c(248): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vc_1 = arm_cos_f32(theta + 2.0943951023931954923084289221863);//cos(theta + 2.0943951023931954923084289221863);
LIB\motor\motor.c(282): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vb_1 = arm_cos_f32(theta - 2.0943951023931954923084289221863);//cos(theta - 2.0943951023931954923084289221863 /* 2*Pi/3 */);
LIB\motor\motor.c(283): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vc_1 = arm_cos_f32(theta + 2.0943951023931954923084289221863);//cos(theta + 2.0943951023931954923084289221863);
LIB\motor\motor.c(303): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	step = err*0.001;
LIB\motor\motor.c(306): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	if(step>0.01) { step=0.01;}
LIB\motor\motor.c(315): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vb_1 = arm_cos_f32(theta - 2.0943951023931954923084289221863);//cos(theta - 2.0943951023931954923084289221863 /* 2*Pi/3 */);
LIB\motor\motor.c(316): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vc_1 = arm_cos_f32(theta + 2.0943951023931954923084289221863);//cos(theta + 2.0943951023931954923084289221863);
LIB\motor\motor.c(354): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	theta = theta_elec_degrees*0.01745329251994329576923690768489 ;//Pi/180; // translating into radians
LIB\motor\motor.c(361): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vb_1 = arm_cos_f32(thetta_vector - 2.0943951023931954923084289221863);//cos(theta - 2.0943951023931954923084289221863 ); //2*Pi/3
LIB\motor\motor.c(362): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vc_1 = arm_cos_f32(thetta_vector + 2.0943951023931954923084289221863);//cos(theta + 2.0943951023931954923084289221863);
LIB\motor\motor.c(396): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	step = error_angle*0.0003;
LIB\motor\motor.c(402): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	if(step>0.006) { step=0.006;}
LIB\motor\motor.c(414): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	tv_g = thetta_vector*57.295779513082320876798154814105 ;//atan2(sin_x, cos_x)*57.295779513082320876798154814105 ;
LIB\motor\motor.c(418): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	t_g = theta*57.295779513082320876798154814105 ;//atan2(sin_x, cos_x)*57.295779513082320876798154814105 ;
LIB\motor\motor.c(453): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vb_1 = arm_cos_f32(thetta_vector - 2.0943951023931954923084289221863);//cos(theta - 2.0943951023931954923084289221863 );
LIB\motor\motor.c(454): warning:  #1035-D: single-precision operand implicitly converted to double-precision
  	Vc_1 = arm_cos_f32(thetta_vector + 2.0943951023931954923084289221863);//cos(theta + 2.0943951023931954923084289221863);
LIB\motor\motor.c(476): warning:  #1-D: last line of file ends without a newline
  } 
LIB\motor\motor.c: 23 warnings, 0 errors
linking...
Program Size: Code=15920 RO-data=2640 RW-data=472 ZI-data=52056  
".\Objects\SPI_FOC.axf" - 0 Error(s), 24 Warning(s).

<h2>Software Packages used:</h2>

Package Vendor: ARM
                http://www.keil.com/pack/ARM.CMSIS.5.0.1.pack
                ARM.CMSIS.5.0.1
                CMSIS (Cortex Microcontroller Software Interface Standard)
   * Component: DSP Version: 1.5.1
   * Component: CORE Version: 5.0.1

Package Vendor: Keil
                http://www.keil.com/pack/Keil.STM32F4xx_DFP.2.11.0.pack
                Keil.STM32F4xx_DFP.2.11.0
                STMicroelectronics STM32F4 Series Device Support, Drivers and Examples
   * Component: Startup Version: 2.6.0

<h2>Collection of Component include folders:</h2>
  .\RTE\_Target_1
  C:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include
  C:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.11.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include

<h2>Collection of Component Files used:</h2>

   * Component: Keil::Device:Startup:2.6.0
      Source file:   MDK\Device\Source\ARM\STM32F40xxx_41xxx_OPT.s
      Source file:   MDK\Device\Source\ARM\STM32F4xx_OTP.s
      Include file:  Drivers\CMSIS\Device\ST\STM32F4xx\Include\stm32f4xx.h
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\arm\startup_stm32f407xx.s
      Source file:   Drivers\CMSIS\Device\ST\STM32F4xx\Source\Templates\system_stm32f4xx.c

   * Component: ARM::CMSIS:DSP:1.5.1
      Include file:  CMSIS\Include\arm_math.h
      Library file:  CMSIS\Lib\ARM\arm_cortexM4lf_math.lib

   * Component: ARM::CMSIS:CORE:5.0.1
Build Time Elapsed:  00:00:01
</pre>
</body>
</html>
